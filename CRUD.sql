CREATE OR REPLACE PROCEDURE CRUD_USUARIOS(
    OPERACION VARCHAR2,
    COD_USUARIO_P NUMBER,
    NOMBRE_USUARIO_P VARCHAR2,
    APELLIDO1_USUARIO_P VARCHAR2,
    APELLIDO2_USUARIO_P VARCHAR2,
    CORREO_USUARIO_P VARCHAR2,
    CONTRASENA_P VARCHAR2,
    ROL_P VARCHAR2
)
IS
BEGIN
    IF UPPER(OPERACION) = 'I' THEN
        INSERT INTO DMJSJSNT_USUARIOS (
            COD_USUARIO, NOMBRE_USUARIO, APELLIDO1_USUARIO, APELLIDO2_USUARIO, CORREO_USUARIO, CONTRASENA, ROL
        ) VALUES (
            COD_USUARIO_P, NOMBRE_USUARIO_P, APELLIDO1_USUARIO_P, APELLIDO2_USUARIO_P, CORREO_USUARIO_P, CONTRASENA_P, ROL_P
        );
    ELSIF UPPER(OPERACION) = 'U' THEN
        UPDATE DMJSJSNT_USUARIOS
        SET NOMBRE_USUARIO = NOMBRE_USUARIO_P,
            APELLIDO1_USUARIO = APELLIDO1_USUARIO_P,
            APELLIDO2_USUARIO = APELLIDO2_USUARIO_P,
            CORREO_USUARIO = CORREO_USUARIO_P,
            CONTRASENA = CONTRASENA_P,
            ROL = ROL_P
        WHERE COD_USUARIO = COD_USUARIO_P;
    ELSIF UPPER(OPERACION) = 'D' THEN
        DELETE FROM DMJSJSNT_USUARIOS
        WHERE COD_USUARIO = COD_USUARIO_P;
    ELSE
        RAISE_APPLICATION_ERROR(-20001, 'Operación no válida. Use I, U o D.');
    END IF;
    
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20002, 'Error en CRUD_USUARIOS: ' || SQLERRM);
END;
/

CREATE OR REPLACE PROCEDURE CRUD_MATERIALES(
    OPERACION VARCHAR2,
    COD_MATERIAL_P NUMBER,
    NOMBRE_MATERIAL_P VARCHAR2,
    DESCRIPCION_P CLOB,
    CANTIDAD_DISPONIBLE_P NUMBER,
    ESTADO_P VARCHAR2,
    PRECIO_P NUMBER,
    COD_BODEGA_P NUMBER
)
IS
BEGIN
    IF UPPER(OPERACION) = 'I' THEN
        INSERT INTO DMJSJSNT_MATERIALES (
            COD_MATERIAL, NOMBRE_MATERIAL, DESCRIPCION, CANTIDAD_DISPONIBLE, ESTADO, PRECIO, COD_BODEGA
        ) VALUES (
            COD_MATERIAL_P, NOMBRE_MATERIAL_P, DESCRIPCION_P, CANTIDAD_DISPONIBLE_P, ESTADO_P, PRECIO_P, COD_BODEGA_P
        );
    ELSIF UPPER(OPERACION) = 'U' THEN
        UPDATE DMJSJSNT_MATERIALES
        SET NOMBRE_MATERIAL = NOMBRE_MATERIAL_P,
            DESCRIPCION = DESCRIPCION_P,
            CANTIDAD_DISPONIBLE = CANTIDAD_DISPONIBLE_P,
            ESTADO = ESTADO_P,
            PRECIO = PRECIO_P,
            COD_BODEGA = COD_BODEGA_P
        WHERE COD_MATERIAL = COD_MATERIAL_P;
    ELSIF UPPER(OPERACION) = 'D' THEN
        DELETE FROM DMJSJSNT_MATERIALES
        WHERE COD_MATERIAL = COD_MATERIAL_P;
    ELSE
        RAISE_APPLICATION_ERROR(-20001, 'Operación no válida. Use I, U o D.');
    END IF;
    
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20002, 'Error en CRUD_MATERIALES: ' || SQLERRM);
END;
/

CREATE OR REPLACE PROCEDURE CRUD_CLIENTES(
    OPERACION VARCHAR2,
    RUT_CLIENTE_P NUMBER,
    NOMBRE_CLIENTE_P VARCHAR2,
    APELLIDO1_CLIENTE_P VARCHAR2,
    APELLIDO2_CLIENTE_P VARCHAR2,
    CORREO_CLIENTE_P VARCHAR2,
    TELEFONO_P NUMBER,
    COD_PAIS_P NUMBER
)
IS
BEGIN
    IF UPPER(OPERACION) = 'I' THEN
        INSERT INTO DMJSJSNT_CLIENTES (
            RUT_CLIENTE, NOMBRE_CLIENTE, APELLIDO1_CLIENTE, APELLIDO2_CLIENTE, CORREO_CLIENTE, TELEFONO, COD_PAIS
        ) VALUES (
            RUT_CLIENTE_P, NOMBRE_CLIENTE_P, APELLIDO1_CLIENTE_P, APELLIDO2_CLIENTE_P, CORREO_CLIENTE_P, TELEFONO_P, COD_PAIS_P
        );
    ELSIF UPPER(OPERACION) = 'U' THEN
        UPDATE DMJSJSNT_CLIENTES
        SET NOMBRE_CLIENTE = NOMBRE_CLIENTE_P,
            APELLIDO1_CLIENTE = APELLIDO1_CLIENTE_P,
            APELLIDO2_CLIENTE = APELLIDO2_CLIENTE_P,
            CORREO_CLIENTE = CORREO_CLIENTE_P,
            TELEFONO = TELEFONO_P,
            COD_PAIS = COD_PAIS_P
        WHERE RUT_CLIENTE = RUT_CLIENTE_P;
    ELSIF UPPER(OPERACION) = 'D' THEN
        DELETE FROM DMJSJSNT_CLIENTES
        WHERE RUT_CLIENTE = RUT_CLIENTE_P;
    ELSE
        RAISE_APPLICATION_ERROR(-20001, 'Operación no válida. Use I, U o D.');
    END IF;
    
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20002, 'Error en CRUD_CLIENTES: ' || SQLERRM);
END;
/

CREATE OR REPLACE PROCEDURE CRUD_BODEGAS(
    OPERACION VARCHAR2,
    COD_BODEGA_P NUMBER,
    NOMBRE_BODEGA_P VARCHAR2,
    COD_REGION_BODEGA_P NUMBER
)
IS
BEGIN
    IF UPPER(OPERACION) = 'I' THEN
        INSERT INTO DMJSJSNT_BODEGAS (
            COD_BODEGA, NOMBRE_BODEGA, COD_REGION_BODEGA
        ) VALUES (
            COD_BODEGA_P, NOMBRE_BODEGA_P, COD_REGION_BODEGA_P
        );
    ELSIF UPPER(OPERACION) = 'U' THEN
        UPDATE DMJSJSNT_BODEGAS
        SET NOMBRE_BODEGA = NOMBRE_BODEGA_P,
            COD_REGION_BODEGA = COD_REGION_BODEGA_P
        WHERE COD_BODEGA = COD_BODEGA_P;
    ELSIF UPPER(OPERACION) = 'D' THEN
        DELETE FROM DMJSJSNT_BODEGAS
        WHERE COD_BODEGA = COD_BODEGA_P;
    ELSE
        RAISE_APPLICATION_ERROR(-20001, 'Operación no válida. Use I, U o D.');
    END IF;
    
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20002, 'Error en CRUD_BODEGAS: ' || SQLERRM);
END;
/

CREATE OR REPLACE PROCEDURE CRUD_DETALLEVENTAS(
    OPERACION VARCHAR2,
    COD_VENTA_P NUMBER,
    COD_MATERIAL_P NUMBER,
    CANTIDAD_P NUMBER,
    PRECIO_UNITARIO_P NUMBER,
    TOTAL_P NUMBER
)
IS
BEGIN
    IF UPPER(OPERACION) = 'I' THEN
        INSERT INTO DMJSJSNT_DETALLEVENTAS (
            COD_VENTA, COD_MATERIAL, CANTIDAD, PRECIO_UNITARIO, TOTAL
        ) VALUES (
            COD_VENTA_P, COD_MATERIAL_P, CANTIDAD_P, PRECIO_UNITARIO_P, TOTAL_P
        );
    ELSIF UPPER(OPERACION) = 'U' THEN
        UPDATE DMJSJSNT_DETALLEVENTAS
        SET CANTIDAD = CANTIDAD_P,
            PRECIO_UNITARIO = PRECIO_UNITARIO_P,
            TOTAL = TOTAL_P
        WHERE COD_VENTA = COD_VENTA_P AND COD_MATERIAL = COD_MATERIAL_P;
    ELSIF UPPER(OPERACION) = 'D' THEN
        DELETE FROM DMJSJSNT_DETALLEVENTAS
        WHERE COD_VENTA = COD_VENTA_P AND COD_MATERIAL = COD_MATERIAL_P;
    ELSE
        RAISE_APPLICATION_ERROR(-20001, 'Operación no válida. Use I, U o D.');
    END IF;

    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE CRUD_VENTAS(
    OPERACION VARCHAR2,
    COD_VENTA_P NUMBER,
    COD_USUARIO_P NUMBER,
    COD_MATERIAL_P NUMBER,
    RUT_CLIENTE_P NUMBER,
    FECHA_VENTA_P DATE,
    TOTAL_VENTA_P NUMBER
)
IS
BEGIN
    IF UPPER(OPERACION) = 'I' THEN
        INSERT INTO DMJSJSNT_VENTAS (
            COD_VENTA, COD_USUARIO, COD_MATERIAL, RUT_CLIENTE, FECHA_VENTA, TOTAL_VENTA
        ) VALUES (
            COD_VENTA_P, COD_USUARIO_P, COD_MATERIAL_P, RUT_CLIENTE_P, FECHA_VENTA_P, TOTAL_VENTA_P
        );
    ELSIF UPPER(OPERACION) = 'U' THEN
        UPDATE DMJSJSNT_VENTAS
        SET COD_USUARIO = COD_USUARIO_P,
            COD_MATERIAL = COD_MATERIAL_P,
            RUT_CLIENTE = RUT_CLIENTE_P,
            FECHA_VENTA = FECHA_VENTA_P,
            TOTAL_VENTA = TOTAL_VENTA_P
        WHERE COD_VENTA = COD_VENTA_P;
    ELSIF UPPER(OPERACION) = 'D' THEN
        DELETE FROM DMJSJSNT_VENTAS WHERE COD_VENTA = COD_VENTA_P;
    ELSE
        RAISE_APPLICATION_ERROR(-20001, 'Operación no válida. Use I, U o D.');
    END IF;

    COMMIT;
END;
/
